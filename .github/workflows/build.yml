name: Build Wheels

on: [push, pull_request]  # 触发条件：当有 push 或 pull_request 时运行

jobs:
  build:
    runs-on: ubuntu-20.04  # 使用最新的 Ubuntu 环境
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]  # 支持的 Python 版本
    steps:
      # 1. 检出代码
      - uses: actions/checkout@v3


      - name: Install Miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          echo "$HOME/miniconda/bin" >> $GITHUB_PATH
      
      - name: Set CUDA environment variables
        run: |
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/miniconda/lib" >> $GITHUB_ENV
          echo "CUDA_HOME=$HOME/miniconda" >> $GITHUB_ENV
          source $HOME/miniconda/etc/profile.d/conda.sh  # 直接加载 conda.sh

      # 2. 设置 Python 环境
      - name: Create conda environment
        run: |
          conda init
          conda create -n myenv-${{ matrix.python-version }} python=${{ matrix.python-version }}
          conda activate myenv-${{ matrix.python-version }}
        
      
      - name: Install CUDA toolkit with conda
        run: |
          conda install -c nvidia cudatoolkit=10.1

      # 3. 安装构建工具
      - name: Install dependencies
        run: |
          conda activate myenv-${{ matrix.python-version }}
          python -m pip install --upgrade pip
          python -m pip install --force-reinstall build auditwheel scikit-build pybind11 patchelf
          

      - name: Debug environment
        run: |
          python -m pip list
          which python
          python -c "import skbuild; print(skbuild.__version__)"
          
      - name: Clean build directories
        run: |
          rm -rf _skbuild/ dist/ build/

     # 4. 构建 wheel 文件
      - name: Build wheel
        run: |
          python -m build --wheel --no-isolation
          mv dist wheelhouse
          
      # 5. 使用 auditwheel 修复 wheel 文件
      - name: Repair wheel with auditwheel
        run: |
          mkdir -p dist
          for whl in wheelhouse/*.whl; do
            auditwheel repair "$whl" --wheel-dir dist/ --plat manylinux_2_24_x86_64
          done

      # 9. 发布到 PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
